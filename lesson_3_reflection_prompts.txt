When would you want to use a remote repository rather than keeping all your work
local?

When you want to back up your work or share it with other people.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Manualy pulling changes prevents your work from being modified without you knowing about it. You complete your work and commit it, then pull changes from the remote repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

A fork is a clone copy of a repository on GitHub.
A clone is a local copy of a repository.
A branch is a series of commits in a repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

You can work on the remote state offline and when you are through you can update the local copy and merge the latest changes from the remote.


How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

Using SVN. The checkout function locks the files so changes cannot be made to them until after a checkin. But you have to update, work, update-checkin in order to collaborate and not block other peoples work. Sometimes the update will break your work and you have to fix and re-test your work. This can keep happening if there is a lot of activity and can be very frustrating.


When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

Make changes in a separate branch when collaborating so that the master branch can always work and have updates waiting to be merged with it. Working in the master branch is better when there is no collaboration so the updates do not interfere with other people's work.

